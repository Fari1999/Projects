from confluent_kafka import Consumer, Producer
import json
import sys

# Kafka-Konfiguration f체r den Consumer
consumer_conf = {
    'bootstrap.servers': '192.168.0.100:9094',  # Passe den Broker an
    'auto.offset.reset': 'earliest'        # Ab dem Anfang lesen
    
}

# Kafka-Konfiguration f체r den Producer
producer_conf = {
    'bootstrap.servers': '192.168.0.100:9094'
}

# Consumer erstellen
consumer = Consumer(consumer_conf)
# Producer erstellen
producer = Producer(producer_conf)

def delivery_report(err, msg):
    """Callback-Funktion f체r die Best채tigung der Nachricht."""
    if err:
        print(f"Fehler beim Senden: {err}")
    else:
        print(f"Nachricht zugestellt an {msg.topic()} [Partition {msg.partition()}]")

if __name__ == '__main__':
    source_topic = 'test'
    target_topic = 'mytopic'

    # Abonniere das Quell-Topic
    consumer.subscribe([source_topic])

    print(f"Listening to topic '{source_topic}' and forwarding to '{target_topic}'...")

    try:
        while True:
             msg = consumer.poll(1.0)  # Warte bis zu 1 Sekunde auf eine Nachricht
             if msg is None:
                continue  # Keine Nachricht erhalten
             if msg.error():
                print(f"Fehler: {msg.error()}")
                continue
             
             # Nachricht aus dem Quell-Topic lesen
             value = msg.value().decode('utf-8')
             print(f"Nachricht empfangen: {value}")

            # Nachricht an das Ziel-Topic senden
             producer.produce(
                target_topic,
                key=msg.key(),
                value=value,
                callback=delivery_report
            )
             producer.flush()  # Senden erzwingen

    except KeyboardInterrupt:
        print("Beendet.")
    finally:
        consumer.close()
